1. Добавить проверку поля произвольного количества ккал в калькуляторе. Меньше 1000 ккал вводить нельзя.
2. Анимировать приложение.
3. Сверстать форму авторизации пользователя.
4. Сделать компонент добавления рецептов.
    4.1 Сверстать добавление заголовка рецепта с проверкой количества символов.
    4.2 Добавление описание к рецепту с ограничениями количества символов.
    4.3 Добавление изображения к рецепту с фиксированным размером.
    4.4 Добавление ингридиентов с калориями и бжу.
    4.5 Выбор количества шагов для приготовления.
    4.6 Вывод шагов и написание информации.
    4.7 Добавление тегов рецептов
    4.8 Кнопка добавления рецепта в бд.
    4.9  записывание всех данных в переменную. 1 пер. Заголовок; 2 пер. описание; 3 пер. путь изображения 4 пер. массив ингридеентов с объектом калорий, бжу
    5.0 кнопка отмены добавления.
    5.1 Посчитать калории на основе всех бжу и записать на отправку, посчитать бжу за 100 грамм.
    5 пер. массив шагов; 6 пер. массив объектов с тегами
5. Сделать верстку вывода рецептов.
6. Сделать страницу подробнее рецептов.
7. наполнить главную страницу информацией.
    7.1 Рассказать о преимуществах калькулятора и рецептов в разных блоках.
node.js:
1. Сделать авторизацию и аутентификацию пользователей с правами доступа.
2. Сделать вывод рецептов и плавную прогрузку при скроллинге.
3. Написать тесты.
4. Сделать вывод рецептов в странице подробнее.
5. Сделать редактирование и удаление рецептов.
6. Добавить аутентификацию бд